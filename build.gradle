buildscript {
  repositories {
    gradlePluginPortal()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.org.swissphpfriends:php-build-plugin:0.1-SNAPSHOT"
  }
}

apply plugin: "org.hasnat.php-build-plugin"
apply plugin: "distribution"

def majorVersion = System.getenv("MAJOR_VERSION") ?: "1"
def minorVersion = System.getenv("MINOR_VERSION") ?: "0"
version = majorVersion + "." + minorVersion 

task purge(type:Delete) {
  //println 'Cleaning up old files'
  delete 'vendor', 'logs', 'build'
}

task composer(type:Exec, dependsOn: purge) {
  //println 'Setting up dependencies'
  executable 'sh'
  args '-c', 'php -r "readfile(\'https://getcomposer.org/installer\');" | php'
  standardOutput = new ByteArrayOutputStream()
  ext.output = { return standardOutput.toString() }
}

task vendor(type:Exec, dependsOn: composer) {
  //println 'Installing dependencies'
  executable 'sh'
  args '-c', 'php composer.phar update'
  standardOutput = new ByteArrayOutputStream()
  ext.output = { return standardOutput.toString() }
}

/*task test(type:Exec, dependsOn: vendor) {
  //println 'Executing tests'
  executable 'sh'
  args '-c', "php \
    './project/vendor/phpunit/phpunit/phpunit' \
    --configuration='./project/phpunit.xml' \
    --log-junit='./logs/unitreport.xml'\
    ./project/tests"
}*/

def tarfile = "application-" + version
task packageDistribution(type: Zip, dependsOn: vendor) {
    archiveFileName = tarfile + ".zip"
    destinationDirectory = file("build")

    from ('app') { into 'app' }
    from ('bootstrap') { into 'bootstrap' }
    from ('config') { into 'config' }
      from ('database') { into 'database' }
      from ('nbproject') { into 'nbproject' }
      from ('public') { into 'public' }
      from ('resources') { into 'resources' }
      from ('storage') {
        into 'storage'
        dirMode 0775
      }
      from ('vendor') { into 'vendor' }
      from { 'server.php' }
}

task up(type:Exec, dependsOn: packageDistribution) {
executable 'sh'
args '-c', 'curl -v --user "admin:xennonia71*" --upload-file build/application-1.0.zip http://192.168.0.44:8081/repository/repotestjenkins/app01/application-1.0.zip'
standardOutput = new ByteArrayOutputStream()
ext.output = { return standardOutput.toString() }
}
